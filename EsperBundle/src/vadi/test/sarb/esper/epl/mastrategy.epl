
insert into emashort
select EMA(cast(close,double)) as ema, 
max(cast(high,double)) as mxhsi, min(cast(high,double)) as mnhsi,
max(cast(low,double)) as mxlsi, min(cast(low,double)) as mnlsi,
symbol, timestamp ,close 
 from EODQuote.win:length(si*numSym) 
 group by symbol ;

insert into emalong
select EMA(cast(close,double)) as ema,  
max(cast(high,double)) as mxhli, min(cast(high,double)) as mnhli,
max(cast(low,double)) as mxlli, min(cast(low,double)) as mnlli,
symbol, timestamp ,close
 from EODQuote.win:length(li*numSym)
group by symbol ;

insert into emashort_st
select EMA(cast(close,double)) as ema, 
max(cast(high,double)) as mxhsi, min(cast(high,double)) as mnhsi,
max(cast(low,double)) as mxlsi, min(cast(low,double)) as mnlsi,
symbol, timestamp ,close 
 from EODQuote.win:length(st*numSym) 
 group by symbol ;

//Crossover slope is not used dont know
insert into crossover
select 'BUY' as signal, es.ema,es.timestamp as timestamp,
es.close as close,es.symbol as symbol, es.mxhsi as high,es.mxlsi as low,
el.ema,bup,
Datetime.str(es.timestamp) as date
from 
emalong.win:length(si*numSym) el, 
emashort.win:length(si*numSym) es,
bupnumber.win:length(si*numSym) bnum,
EODQuote.win:length(si*numSym) q
where
el.symbol = es.symbol and
es.symbol = bnum.symbol and
bnum.symbol = q.symbol and
cast(q.close,double) > es.ema and
es.ema > el.ema and
el.ema > 0 and
es.ema > 0 and
el.timestamp = es.timestamp and
es.timestamp = bnum.timestamp and
bnum.timestamp = q.timestamp and
bnum.bup > 70 and
prev(numSym,bnum.bup) < 70 and
cast(prev(numSym,q.close),double) <= prev(numSym,es.ema)
group by es.symbol ;

//Crossover slope is not used dont know
insert into crossover
select 'SELL' as signal, es.ema,es.timestamp as timestamp,
es.close as close,es.symbol as symbol, es.mxhsi as high,es.mxlsi as low,
el.ema,bup,
Datetime.str(es.timestamp) as date
from 
emalong.win:length(si*numSym) el, 
emashort_st.win:length(si*numSym) es,
bupnumber.win:length(si*numSym) bnum,
EODQuote.win:length(si*numSym) q
where
el.symbol = es.symbol and
es.symbol = bnum.symbol and
bnum.symbol = q.symbol and
cast(q.close,double) < es.ema and
es.ema > el.ema and
el.ema > 0 and
es.ema > 0 and
el.timestamp = es.timestamp and
es.timestamp = bnum.timestamp and
bnum.timestamp = q.timestamp and
bnum.bup < 50 and
prev(numSym,bnum.bup) > 50  and
cast(prev(numSym,q.close),double) >= prev(numSym,es.ema)
group by es.symbol ;

// Generate tradesignal.. only simulation.
@Name('MASignal')
insert into TradeSignal(symbol,open,high,low,close,type,indicator,price_timestamp)
select q.symbol,q.open,q.high,q.low,q.close,signal,'MA',cast(q.timestamp,string)
from 
EODQuote.win:length(si*numSym) q , crossover.win:length(numSym) cross
where
cross.timestamp=prev(numSym,q.timestamp) and
cross.symbol=q.symbol ;


insert into TradeSignal(Symbol,open,high,low,close,type,indicator,price_timestamp)
select q.symbol,q.open,q.high,q.low,q.close,signal,"STOPLOSS",cast(q.timestamp,string)
from
EODQuote.win:length(100) q, StopLoss.win:length(5) sl
where
sl.timestamp=prev(numSym,q.timestamp) and
sl.symbol=q.symbol;

